GSRC = ..\code\GProject\src
GBIN = bin
GBUILD = build
GTARGET = $(GBIN)\gp_cpp.exe

GINCS = \
    -I$(GSRC)/include \
    -IC:\Users\Admin\Downloads\Programs\ReadyLib\dev\exprtk\mingw\include \
    -IC:\Users\Admin\Downloads\Programs\ReadyLib\dev\muparser\mingw\include \

GLIBS = \
    -LC:\Users\Admin\Downloads\Programs\ReadyLib\dev\muparser\mingw\lib \
    -lmuparser \
    
GOBJS = \
    $(patsubst $(GSRC)/%.cpp, $(GBUILD)/%.o, $(wildcard $(GSRC)/*.cpp)) \
    $(patsubst $(GSRC)/manager/%.cpp, $(GBUILD)/%.o, $(wildcard $(GSRC)/manager/*.cpp)) \

GCFLAGS = \
    -std=gnu++11 \
    -Wa,-mbig-obj \
    
all: compile run

compile: $(GOBJS)
	@if not exist $(GBIN) ( mkdir $(GBIN) )
	g++ $(GCFLAGS) -o $(GTARGET) $(GOBJS) $(GLIBS) 
$(GBUILD)/%.o: $(GSRC)/%.cpp
	@if not exist $(GBUILD) ( mkdir $(GBUILD) )
	g++ $(GCFLAGS) -c $< -o $@ $(GINCS)
$(GBUILD)/%.o: $(GSRC)/manager/%.cpp
	@if not exist $(GBUILD) ( mkdir $(GBUILD) )
	g++ $(GCFLAGS) -c $< -o $@ $(GINCS)
qmake:
	@qmake
run:
	@$(GTARGET)
clean: 
	del /q $(GBUILD)\*.* $(GTARGET)
